version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: runtime
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    image: klinik-gkn-app
    restart: unless-stopped
    env_file: .env
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_URL: ${APP_URL:-http://localhost}
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-klinik_db}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-}
      CACHE_STORE: database
      QUEUE_CONNECTION: database
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - storage:/var/www/html/storage

  queue:
    image: klinik-gkn-app
    restart: unless-stopped
    command: php artisan queue:work --tries=1 --sleep=3
    env_file: .env
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-klinik_db}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-}
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - app
    volumes:
      - storage:/var/www/html/storage

  scheduler:
    image: klinik-gkn-app
    restart: unless-stopped
    command: php artisan schedule:work
    env_file: .env
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-klinik_db}
      DB_USERNAME: ${DB_USERNAME:-root}
      DB_PASSWORD: ${DB_PASSWORD:-}
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - app
    volumes:
      - storage:/var/www/html/storage

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - storage:/var/www/html/storage:ro
      - ./public:/var/www/html/public:ro

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-klinik_db}
      POSTGRES_USER: ${DB_USERNAME:-root}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-}
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_DATABASE:-klinik_db} -U ${DB_USERNAME:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"

  # Aktifkan service ini bila perlu Vite dev server dengan hot reload.
  # vite:
  #   image: node:20-bookworm
  #   working_dir: /var/www/html
  #   command: npm run dev -- --host 0.0.0.0 --port 5173
  #   volumes:
  #     - .:/var/www/html
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - app

volumes:
  storage:
  pg-data:
